<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Animal Match Game</title>
</head>
<body>
  <script>
    // ==== DATA ====
    const emojis = ['🐱', '🐶', '🐰', '🦊', '🐹', '🦝', '🐨', '🐒'];
    let cards = [...emojis, ...emojis].sort(() => Math.random() - 0.5);
    let flipped = [];
    let lockBoard = false;

    // ==== STYLES ====
    const style = document.createElement('style');
    style.textContent = `
      body {
        font-family: sans-serif;
        text-align: center;
        background:  #cccccc;
        margin: 0;
        padding: 20px;
      }
      h1 {
        margin-bottom: 20px;
      }
      .board {
        display: grid;
        grid-template-columns: repeat(4, 100px);
        gap: 15px;
        justify-content: center;
      }
      .card {
        width: 100px;
        height: 100px;
        perspective: 1000px;
        cursor: pointer;
      }
      .card-inner {
        width: 100%;
        height: 100%;
        position: relative;
        transform-style: preserve-3d;
        transition: transform 0.6s;
      }
      .card.flipped .card-inner {
        transform: rotateY(180deg);
      }
      .card-front, .card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        font-size: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        backface-visibility: hidden;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
      }
      .card-front {
        background: #d9d9d9;
        transform: rotateY(180deg);
      }
      .card-back {
        background: #00FF7F;
        color: whiteSmoke;
      }
    `;
    document.head.appendChild(style);

    // ==== CREATE BOARD ====
    const title = document.createElement('h1');
    title.textContent = '🐾 Match the Animals!';
    document.body.appendChild(title);

    const board = document.createElement('div');
    board.className = 'board';
    document.body.appendChild(board);

    // ==== CREATE CARDS ====
    cards.forEach(emoji => {
      const card = document.createElement('div');
      card.className = 'card';
      const inner = document.createElement('div');
      inner.className = 'card-inner';

      const front = document.createElement('div');
      front.className = 'card-front';
      front.textContent = emoji;

      const back = document.createElement('div');
      back.className = 'card-back';
      back.textContent = '<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Memory Game</title>
  <style>
    body {
      font-family: sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background: #f0f0f0;
    }
    .game-board {
      display: grid;
      grid-template-columns: repeat(4, 80px);
      gap: 10px;
    }
    .card {
      width: 80px;
      height: 80px;
      background: #4CAF50;
      color: white;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 2rem;
      cursor: pointer;
      border-radius: 8px;
      user-select: none;
      transition: transform 0.3s;
    }
    .card.flipped, .card.matched {
      background: white;
      color: black;
      border: 2px solid #4CAF50;
    }
    .card.matched {
      background: lightgray;
      pointer-events: none;
    }
  </style>
</head>
<body>

<div class="game-board" id="gameBoard"></div>

<script>
  const letters = "A B C D E F G H".split("");
  let cardValues = [...letters, ...letters]; // 16 total
  cardValues.sort(() => 0.5 - Math.random()); // shuffle

  const gameBoard = document.getElementById("gameBoard");
  let flippedCards = [];
  let lockBoard = false;

  // Create the cards
  cardValues.forEach((letter, index) => {
    const card = document.createElement("div");
    card.classList.add("card");
    card.dataset.letter = letter;
    card.dataset.index = index;
    card.innerText = ""; // initially blank
    gameBoard.appendChild(card);

    card.addEventListener("click", () => {
      if (lockBoard || card.classList.contains("flipped") || card.classList.contains("matched")) return;

      card.classList.add("flipped");
      card.innerText = card.dataset.letter;
      flippedCards.push(card);

      if (flippedCards.length === 2) {
        lockBoard = true;
        const [card1, card2] = flippedCards;
        if (card1.dataset.letter === card2.dataset.letter) {
          card1.classList.add("matched");
          card2.classList.add("matched");
          flippedCards = [];
          lockBoard = false;

          // Check win condition
          const allMatched = document.querySelectorAll(".card.matched").length === 16;
          if (allMatched) {
            setTimeout(() => alert("Congratulations! You've matched all pairs!"), 300);
          }
        } else {
          setTimeout(() => {
            card1.classList.remove("flipped");
            card2.classList.remove("flipped");
            card1.innerText = "";
            card2.innerText = "";
            flippedCards = [];
            lockBoard = false;
          }, 1000);
        }
      }
    });
  });
</script>

</body>
</html>
';

      inner.appendChild(front);
      inner.appendChild(back);
      card.appendChild(inner);
      board.appendChild(card);

      // Click logic
      card.addEventListener('click', () => {
        if (lockBoard || card.classList.contains('flipped')) return;

        card.classList.add('flipped');
        flipped.push(card);

        if (flipped.length === 2) {
          lockBoard = true;

          const [first, second] = flipped;
          const firstEmoji = first.querySelector('.card-front').textContent;
          const secondEmoji = second.querySelector('.card-front').textContent;

          if (firstEmoji === secondEmoji) {
            flipped = [];
            lockBoard = false;
          } else {
            setTimeout(() => {
              first.classList.remove('flipped');
              second.classList.remove('flipped');
              flipped = [];
              lockBoard = false;
            }, 1000);
          }
        }
      });
    });
  </script>
</body>
</html>
